# Git and Azure Repos
- Azure Repos support both GIT and TFVC (centralised version control system)
- Github supports only GIT

- For dotnet projects add the bin and obj directories to .gitignore file

Git Flow
Working Directory -> Staging -> Local Repo -> Remote Repo

# Git Basic Commands
git init
git config user.name sagar
git config user.email sagar@abc.xyz
git status
git add .
git log
git commit -m -a (Both stage and commit at the same time)

# Pulling and Pushing code to the remote repository
https://dev.azure.com
1. Create a new project - HelloWorldApp as project name of Basic project type
2. Go to the Repos section
git remote add origin https://Genesso@dev.azure.com/Genesso/HelloWorldAppDotnet/_git/HelloWorldAppDotnet
git remote -v
git push -u origin --all
git branch

After making changes to push to the remote repo use the following command
git push origin master

A developer can pull the changes of code using the following command
git pull origin master

# Branches and Merging
git pull origin master
git branch feature/f1
git checkout feature/f1
Edit the code
git status
git add . && git commit -m "Feature F1"
git checkout master
git merge feature/f1
git push origin master
git log

-------------
Pull Requests
-------------
- Delete branches in local other than master branch
$ git branch -d feature/f1
$ git branch

- Create a new branch feature/f2 and checkout into newly created branch
$ git branch feature/f2
$ git checkout feature/f2
$ git branch

- Edit the code in this new feature branch
$ git status

- Add the new code to staging and commit the changes in local
$ git commit -m "Feature2 - f2 branch created and code modified" -a
$ git status
$ git log --oneline

- Push the feature/f2 branch to the remote repository
$ git push origin feature/f2

- Go to the console of Azure DevOps - Azure Repos and observe if there are two branches Master and feature/f2
- From console create a pull request to review the edited code
    * While creating the pull request observe - work items to link and tags option
    * work items to link are those item on the Azure board - automatically they will be completed
    * tag opiton will be used in the CI/CD - Azure CI pipelines
- Add yourself as the reviewer - this will not be apprach in real time
- After approving the pull reques - complete pull request
- Observe the modified files
- Delete feature/f2 branch after completing pull request
- Now feature/f2 branch will not be available

- To have the same code in out local master branch - pull the code from the repository
$ git checkout master
$ git pull master

- Delete the feature/f2 branch from local as well
$ git branch
$ git branch -d feature/f2
$ git branch